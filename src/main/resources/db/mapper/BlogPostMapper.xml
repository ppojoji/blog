<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BlogPostMapper">
	<resultMap type="LocalUpFile" id="upFileMap">
		<id column="seq" property="seq"/>
		<result column="originName" property="originalName"/>
		<result column="genName" property="genName"/>
		<result column="fileSize" property="fileSize"/>
		<result column="contentType" property="contentType"/>
		<result column="post" property="post"/>
		<result column="origin" property="origin"/>
		<!-- 변환에 사용될 핸들러 클래스 지정 -->
		
		<!-- <result property="open" column="open" jdbcType="VARCHAR"
			typeHandler="naver.ppojoji.blog.typehandler.StringYnTypeHandler" /> -->
	</resultMap>
	<resultMap type="Post" id="PostMap">
		<id column="pseq" property="seq"/>
		<result column="title" property="title" />
		<result column="contents" property="contents"/>
		<result column="creation_date" property="creationDate"/>
		<result column="view_count" property="viewCount"/>
		<!-- <result column="open" property="open"/> -->
		<result column="view_pass" property="viewPass"/>
		<!-- <result column="writer" property="writerSeq"/> -->
		<!-- 변환에 사용될 핸들러 클래스 지정 -->
		<result property="open" column="open"
			typeHandler="naver.ppojoji.blog.typehandler.StringYnTypeHandler" /> 
		<association 
			column="writer" 
			property="writer" 
			select="UserMapper.findUserV1"/>
		<collection property="upFiles" ofType="LocalUpFile" resultMap="upFileMap"/>
		<!-- join query!!! FIXME
		<association 
			column="writer" 
			property="writer" 
			resultMap="UserMapper.UserMap"/>
		 -->
	</resultMap>
	<resultMap type="Post" id="PostWithCnt" extends="PostMap">
		<result column="cnt" property="replyCount"/>
	</resultMap>
	<!-- 
		integer -> java.lang.Integer
		_int -> int, _long, _double
		long, double, short -. java.lang.Long ...
		
		map : java.util.Map
	 -->
	<!-- <select id="findPostBySeq" parameterType="integer" resultType="naver.ppojoji.blog.dto.Post">
	select
		seq,
		title,
		contents,
		creation_date as creationDate,
		view_count as viewCount,
		writer as writerSeq
	from
		TB_POST
	where
		seq = #{id}
	</select> -->
	<sql id="select_post">
		p.seq as pseq,
		p.title,
		p.contents,
		p.creation_date,
		p.view_count,
		p.writer,
		p.open,
		p.view_pass
	</sql>
	<select id="findPostBySeq" parameterType="integer" resultMap="PostMap">
	select
		<include refid="select_post"></include>
		, f.*
	from
		TB_POST p
	left join 
		tb_files f
	on
		p.seq = f.post
	where
		p.seq = #{id}
	</select>
	
	<select id="findAllPost" resultMap="PostWithCnt" parameterType="boolean">
	select
		<include refid="select_post"></include>
		,rp.cnt
	from
		TB_POST p
	LEFT JOIN (select
            p.seq, 
            count(p.SEQ) as cnt
          from TB_POST p 
          inner join TB_REPLY r
          on p.seq = r.PARENT
          where p.OPEN = 'Y'
          group by p.seq )rp
      ON rp.seq = p.seq	
	where
		1 = 1 
	and open = #{open,typeHandler=naver.ppojoji.blog.typehandler.StringYnTypeHandler}
	order by p.creation_date desc
	</select>
	<insert id="insertPost" parameterType="map">
		insert into TB_POST (
			seq,
			TITLE,
			contents,
			writer
		) values (
			tb_post_seq.nextval,
			#{title},
			#{contents},
			#{writeSeq}
		)
		<selectKey keyProperty="seq" resultType="integer" order="AFTER">
			SELECT TB_POST_SEQ.currval FROM dual
		</selectKey>
	</insert>
	<update id="updatePost" parameterType="map">
		update tb_Post
		set
			title = #{title}
			, contents = #{contents}
		where
			seq = #{postSeq} 
	</update>
	<delete id="deletePost" parameterType="Integer">
		delete from tb_Post
		where seq=#{id}
	</delete>
	<update id="viewCount" parameterType="Integer">
		update TB_POST 
		set view_count = view_count + 1
		where seq = #{seq}
	</update>
	<select id="open" parameterType="String" resultMap="PostMap">
		select
		<include refid="select_post"></include>
		from
			TB_POST p
		where open=#{id}
	</select>
	<update id="updateOpen" parameterType="map">
		update tb_post 
		set open = #{isOpen, typeHandler=naver.ppojoji.blog.typehandler.StringYnTypeHandler}
		where seq = #{postSeq}
	</update>
	<select id="findPostByWriter" parameterType="Integer" resultMap="PostMap">
		select
			<include refid="select_post"></include>
		from
			TB_POST p
		where writer = #{writerSeq}	
	</select>
	<select id="SearchPost" parameterType="Search" resultMap="PostMap">
		select 
			<include refid="select_post"></include> 
		from TB_POST p
		where replace(${searchType}, chr(13),'') like '%${keyword}%' 
	</select>
	<select id="MultiSearchPost" parameterType="multiSearch" resultMap="PostMap">
		select 
			<include refid="select_post"></include> 
		from TB_POST p
		where 1=1
			<trim prefix="AND (" suffix=")" prefixOverrides="OR">
				<if test="title == true">
					OR TITLE like '%' || #{multiKeyword, jdbcType=VARCHAR} || '%'
				</if>
				<if test="contents == true">
					OR CONTENTS like '%' || #{multiKeyword, jdbcType=VARCHAR} || '%'
				</if>
				<if test="writer == true">
					 OR WRITER = #{writerKeyword,jdbcType=INTEGER} 
				</if>
			</trim>
	</select>
</mapper>